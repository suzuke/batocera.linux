#!/bin/bash

do_start() {

    ###
    # enable tv output :
    ###

    # taken from the libreelec project
    # https://github.com/LibreELEC/LibreELEC.tv/blob/master/projects/S905/initramfs/platform_init

    hdmimode=1080p60hz

    # Parse command line arguments
    for arg in $(cat /proc/cmdline); do
	case $arg in
	    hdmimode=*)
		hdmimode="${arg#*=}"
		;;
	esac
    done

    # Enable HDMI output if cable is connected and not already enabled by u-boot
    if [ "$(cat /sys/class/amhdmitx/amhdmitx0/hpd_state)" != "0" ] && [ "$display_mode" != "$hdmimode" ]; then
      echo "$hdmimode" > /sys/class/display/mode
      display_mode="$hdmimode"
    fi

    # Set framebuffer geometry to match the resolution
    case $hdmimode in
      480*)            X=720  Y=480  ;;
      576*)            X=720  Y=576  ;;
      720p*)           X=1280 Y=720  ;;
      *)               X=1920 Y=1080 ;;
    esac

    fbset -fb /dev/fb0 -g $X $Y 1920 2160 32
    fbset -fb /dev/fb1 -g 32 32 32 32 32
    echo 0 > /sys/class/graphics/fb0/free_scale
    echo 0 > /sys/class/graphics/fb1/free_scale
    echo 1 > /sys/class/video/disable_video

    # Enable scaling for 4K output
    case $hdmimode in
      4k*|smpte*|2160*)
        echo 0 0 1919 1079 > /sys/class/graphics/fb0/free_scale_axis
        echo 0 0 3839 2159 > /sys/class/graphics/fb0/window_axis
        echo 1920 > /sys/class/graphics/fb0/scale_width
        echo 1080 > /sys/class/graphics/fb0/scale_height
        echo 0x10001 > /sys/class/graphics/fb0/free_scale
      ;;
    esac

    # Include deinterlacer into default VFM map
    echo rm default > /sys/class/vfm/map
    echo add default decoder ppmgr deinterlace amvideo > /sys/class/vfm/map

    # Enable framebuffer device
    echo 0 > /sys/class/graphics/fb0/blank

    # Blank fb1 to prevent static noise
    echo 1 > /sys/class/graphics/fb1/blank

    for part in /sys/block/*/queue/add_random; do
      echo 0 > "$part"
    done

    # set smp_affinity
    #            Binary       Hex
    #    CPU 0    0001         1
    #    CPU 1    0010         2
    #    CPU 2    0100         4
    #    CPU 3    1000         8
    echo 2 > /proc/irq/231/smp_affinity  # hdmi_aocec
    echo 4 > /proc/irq/63/smp_affinity   # dwc_otg, dwc_otg_hcd:usb1
    echo 8 > /proc/irq/62/smp_affinity   # dwc_otg, dwc_otg_hcd:usb2, dwc_otg_pcd

    # DEC_CONTROL_FLAG_DISABLE_FAST_POC
    echo 4 > /sys/module/amvdec_h264/parameters/dec_control

    echo 1 > /sys/devices/system/cpu/cpufreq/ondemand/io_is_busy


    # https://www.linuxquestions.org/questions/linux-software-2/mplayer-as-bootsplash-4175608496/
    video="/recalbox/system/resources/splash/recalboxintro.mp4"
    fifopipe="/tmp/mplayer-control"
    if [[ -f $video && -f /usr/bin/mplayer ]]; then

        if [[ ! -r $fifopie ]]; then
	    mkfifo $fifopipe
        fi

        VIDEOW=$(cat /sys/class/graphics/fb0/virtual_size | cut -d, -f1)
        VIDEOH=$(cat /sys/class/graphics/fb0/virtual_size | cut -d, -f2)

        # Launch the video
        /usr/bin/mplayer \
                -slave \
		-nolirc \
                -vo fbdev \
		-ao sdl \
                -fs \
                -zoom -x ${VIDEOW} -y ${VIDEOH} \
                -really-quiet \
                -rootwin \
                -loop 0 \
                -input file=$fifopipe $video &
    fi

    count=0
    while [[ $count -lt 2000 ]]; do
	if [[ ! -z $(pidof emulationstation) ]]; then
            if [[ ! -z $(pidof mplayer) ]]; then
                echo -e "q\n" > $fifopipe
		sleep 1s
		rm $fifopipe
	    fi
	    break
	fi
        sleep 0.1s
        ((count++))
    done
}

case "$1" in
    start)
        do_start &
        ;;
    stop)
	   ;;
    restart|reload)
	   ;;
    *)
esac

exit $?
